diff --git a/lib/neuralnetwork.js b/lib/neuralnetwork.js
index d9c0545..c5961a8 100644
--- a/lib/neuralnetwork.js
+++ b/lib/neuralnetwork.js
@@ -81,6 +81,8 @@ NeuralNetwork.prototype = {
     var errorThresh = options.errorThresh || 0.005;
     var log = options.log || false;
     var logPeriod = options.logPeriod || 10;
+    var callback = options.callback;
+    var callbackPeriod = options.callbackPeriod || 10;
 
     var inputSize = data[0].input.length;
     var outputSize = data[0].output.length;
@@ -104,6 +106,9 @@ NeuralNetwork.prototype = {
       if (log && (i % logPeriod == 0)) {
         console.log("iterations:", i, "training error:", error);
       }
+      if (callback && (i % callbackPeriod == 0)) {
+        callback({ error: error, iterations: i });
+      }
     }
 
     return {
diff --git a/test/unit/errorthresh.js b/test/unit/errorthresh.js
deleted file mode 100644
index 94f1218..0000000
--- a/test/unit/errorthresh.js
+++ /dev/null
@@ -1,29 +0,0 @@
-var assert = require('should'),
-    brain = require("../../lib/brain");
-
-var data = [{input: [0, 0], output: [0]},
-            {input: [0, 1], output: [1]},
-            {input: [1, 0], output: [1]},
-            {input: [1, 1], output: [1]}];
-
-describe('thresholds' , function() {
-  it('train until error threshold reached', function() {
-    var net = new brain.NeuralNetwork();
-    var error = net.train(data, {
-      errorThresh: 0.2,
-      iterations: 100000
-    }).error;
-
-    assert.ok(error < 0.2, "network did not train until error threshold was reached");
-  });
-
-  it('train until max iterations reached', function() {
-    var net = new brain.NeuralNetwork();
-    var stats = net.train(data, {
-      errorThresh: 0.001,
-      iterations: 1
-    });
-
-    assert.equal(stats.iterations, 1);
-  })
-})
